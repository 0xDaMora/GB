function Resampler(t,e,i,s,r){this.fromSampleRate=t,this.toSampleRate=e,this.channels=0|i,this.outputBufferSize=s,this.noReturn=!!r,this.initialize()}Resampler.prototype.initialize=function(){if(this.fromSampleRate>0&&this.toSampleRate>0&&this.channels>0)this.fromSampleRate==this.toSampleRate?(this.resampler=this.bypassResampler,this.ratioWeight=1):(this.ratioWeight=this.fromSampleRate/this.toSampleRate,this.fromSampleRate<this.toSampleRate?(this.compileLinearInterpolationFunction(),this.lastWeight=1):(this.compileMultiTapFunction(),this.tailExists=!1,this.lastWeight=0),this.initializeBuffers());else throw Error("Invalid settings specified for the resampler.")},Resampler.prototype.compileLinearInterpolationFunction=function(){for(var t="var bufferLength = buffer.length;	var outLength = this.outputBufferSize;	if ((bufferLength % "+this.channels+") == 0) {		if (bufferLength > 0) {			var weight = this.lastWeight;			var firstWeight = 0;			var secondWeight = 0;			var sourceOffset = 0;			var outputOffset = 0;			var outputBuffer = this.outputBuffer;			for (; weight < 1; weight += "+this.ratioWeight+") {				secondWeight = weight % 1;				firstWeight = 1 - secondWeight;",e=0;e<this.channels;++e)t+="outputBuffer[outputOffset++] = (this.lastOutput["+e+"] * firstWeight) + (buffer["+e+"] * secondWeight);";t+="}			weight -= 1;			for (bufferLength -= "+this.channels+", sourceOffset = Math.floor(weight) * "+this.channels+"; outputOffset < outLength && sourceOffset < bufferLength;) {				secondWeight = weight % 1;				firstWeight = 1 - secondWeight;";for(var e=0;e<this.channels;++e)t+="outputBuffer[outputOffset++] = (buffer[sourceOffset"+(e>0?" + "+e:"")+"] * firstWeight) + (buffer[sourceOffset + "+(this.channels+e)+"] * secondWeight);";t+="weight += "+this.ratioWeight+";				sourceOffset = Math.floor(weight) * "+this.channels+";			}";for(var e=0;e<this.channels;++e)t+="this.lastOutput["+e+"] = buffer[sourceOffset++];";t+='this.lastWeight = weight % 1;			return this.bufferSlice(outputOffset);		}		else {			return (this.noReturn) ? 0 : [];		}	}	else {		throw(new Error("Buffer was of incorrect sample length."));	}',this.resampler=Function("buffer",t)},Resampler.prototype.compileMultiTapFunction=function(){for(var t="var bufferLength = buffer.length;	var outLength = this.outputBufferSize;	if ((bufferLength % "+this.channels+") == 0) {		if (bufferLength > 0) {			var weight = 0;",e=0;e<this.channels;++e)t+="var output"+e+" = 0;";for(t+="var actualPosition = 0;			var amountToNext = 0;			var alreadyProcessedTail = !this.tailExists;			this.tailExists = false;			var outputBuffer = this.outputBuffer;			var outputOffset = 0;			var currentPosition = 0;			do {				if (alreadyProcessedTail) {					weight = "+this.ratioWeight+";",e=0;e<this.channels;++e)t+="output"+e+" = 0;";for(t+="}				else {					weight = this.lastWeight;",e=0;e<this.channels;++e)t+="output"+e+" = this.lastOutput["+e+"];";for(t+="alreadyProcessedTail = true;				}				while (weight > 0 && actualPosition < bufferLength) {					amountToNext = 1 + actualPosition - currentPosition;					if (weight >= amountToNext) {",e=0;e<this.channels;++e)t+="output"+e+" += buffer[actualPosition++] * amountToNext;";for(t+="currentPosition = actualPosition;						weight -= amountToNext;					}					else {",e=0;e<this.channels;++e)t+="output"+e+" += buffer[actualPosition"+(e>0?" + "+e:"")+"] * weight;";for(t+="currentPosition += weight;						weight = 0;						break;					}				}				if (weight <= 0) {",e=0;e<this.channels;++e)t+="outputBuffer[outputOffset++] = output"+e+" / "+this.ratioWeight+";";for(t+="}				else {					this.lastWeight = weight;",e=0;e<this.channels;++e)t+="this.lastOutput["+e+"] = output"+e+";";t+='this.tailExists = true;					break;				}			} while (actualPosition < bufferLength && outputOffset < outLength);			return this.bufferSlice(outputOffset);		}		else {			return (this.noReturn) ? 0 : [];		}	}	else {		throw(new Error("Buffer was of incorrect sample length."));	}',this.resampler=Function("buffer",t)},Resampler.prototype.bypassResampler=function(t){return this.noReturn?(this.outputBuffer=t,t.length):t},Resampler.prototype.bufferSlice=function(t){if(this.noReturn)return t;try{return this.outputBuffer.subarray(0,t)}catch(e){try{return this.outputBuffer.length=t,this.outputBuffer}catch(i){return this.outputBuffer.slice(0,t)}}},Resampler.prototype.initializeBuffers=function(){try{this.outputBuffer=new Float32Array(this.outputBufferSize),this.lastOutput=new Float32Array(this.channels)}catch(t){this.outputBuffer=[],this.lastOutput=[]}};