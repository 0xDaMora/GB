var XAudioJSResampledBuffer=[],XAudioJSOutputBuffer=[],XAudioJSResampleBufferStart=0,XAudioJSResampleBufferEnd=0,XAudioJSResampleBufferSize=0,XAudioJSChannelsAllocated=1;function XAudioJSResampledSamplesLeft(){return(XAudioJSResampleBufferStart<=XAudioJSResampleBufferEnd?0:XAudioJSResampleBufferSize)+XAudioJSResampleBufferEnd-XAudioJSResampleBufferStart}self.onmessage=function(e){var u=e.data;switch(u[0]){case 0:for(var f=u[1],a=f.length,d=0;d<a;++d)XAudioJSResampledBuffer[XAudioJSResampleBufferEnd++]=f[d],XAudioJSResampleBufferEnd==XAudioJSResampleBufferSize&&(XAudioJSResampleBufferEnd=0),XAudioJSResampleBufferStart==XAudioJSResampleBufferEnd&&(XAudioJSResampleBufferStart+=XAudioJSChannelsAllocated)==XAudioJSResampleBufferSize&&(XAudioJSResampleBufferStart=0);break;case 1:XAudioJSResampleBufferSize=u[1],XAudioJSChannelsAllocated=u[2],XAudioJSResampledBuffer=new Float32Array(XAudioJSResampleBufferSize)}},self.onprocessmedia=function(e){var u=e.audioLength,f=u*e.audioChannels;f>XAudioJSOutputBuffer.length&&(XAudioJSOutputBuffer=new Float32Array(f));for(var a=Math.min(u,XAudioJSResampledSamplesLeft()/XAudioJSChannelsAllocated),d=0,o=0;d<a;++d)for(o=d;o<f;o+=u)XAudioJSOutputBuffer[o]=XAudioJSResampledBuffer[XAudioJSResampleBufferStart++],XAudioJSResampleBufferStart==XAudioJSResampleBufferSize&&(XAudioJSResampleBufferStart=0);for(;d<u;)for(o=d++;o<f;o+=u)XAudioJSOutputBuffer[o]=0;e.writeAudio(XAudioJSOutputBuffer.subarray(0,f)),self.postMessage(e.audioLength)};